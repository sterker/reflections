Git /  Git Hub Udacity Class

How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    identified lines that changed

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    easily find bugs

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    can save a 'bad' version

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    git is geared toward code version control and that often contains groups
    of connected files (repositories) as opposed to other VCSs which are geared
    more toward individual files.

How can you use the commands git log and git diff to view the history of files?

    log shows list of previous version, use --stat for more details
    diff compares files

How might using version control make you more confident to make changes that
could break something?

    can always revert to previous version, debug from there

Now that you have your workspace set up, what do you want to try using Git for?

    for comparing files, tracking changes

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

    you can see the reasoning behind programming actions

What do you think are the pros and cons of manually choosing when to create a commit,
like you do in Git, vs having versions automatically saved, like Google Docs does?

    Pros: can organize/package logical connections into a commit
    Cons: can forget to commit, can have computer malfunction
